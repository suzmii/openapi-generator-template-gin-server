{{>partial_header}}
package {{packageName}}

{{#operations}}
import (
	"net/http"
	"github.com/gin-gonic/gin"
)
{{#operation}}

// {{nickname}} - {{{summary}}}
func {{nickname}}(c *gin.Context) {
	{{#hasParams}}
	// 解析参数（仅当存在 path/header/query 参数时生成）
	var params struct {
		{{#pathParams}}
		{{paramName}} string `path:"{{baseName}}"`
		{{/pathParams}}
		{{#headerParams}}
		{{paramName}} string `header:"{{baseName}}"`
		{{/headerParams}}
		{{#queryParams}}
		{{paramName}} string `query:"{{baseName}}"`
		{{/queryParams}}
	}
	if err := bindParams(c, &params); err != nil {
		c.JSON(http.StatusBadRequest, ErrorResponse{
			Code:    http.StatusBadRequest,
			Message: err.Error(),
		})
		return
	}
	{{/hasParams}}

	{{#bodyParam}}
	// 解析请求体
	var request {{dataType}}
	if err := c.ShouldBindJSON(&request); err != nil {
		c.JSON(http.StatusBadRequest, ErrorResponse{
			Code:    http.StatusBadRequest,
			Message: "Invalid request body",
		})
		return
	}
	{{/bodyParam}}

	{{#responses}}
	{{#dataType}}
	type Response = {{dataType}}
	{{/dataType}}
	{{/responses}}

	// TODO: 业务逻辑
}
{{/operation}}
{{/operations}}
